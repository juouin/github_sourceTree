
1. 깃 다운로드  https://git-scm.com/
2. 깃 설치후 윈도우 - Git Bash 실행 - git 검색해서 제대로 설치되었는지 확인하기
3. GUI에서 git을 제어할수있는 도구가 필요하다. -> SourceTree 다운로드    https://www.sourcetreeapp.com/
4. 소스트리 설정방법은 구글링하기... 그냥 건너뛰기하고 다음다음 누르면됨

5. 소스트리 실행 - 도구 - 옵션 - 언어 영어로 바꾸기
6. 저장소 만들기 : Create - 프로젝트를 저장할 경로 찾기(프로젝트의 경로) - 생성
7. 저장소에 있는 파일 커밋하기 : Unstaged files에 커밋하려는 파일을 +를 눌러 Staged files에 올린후 좌측상단에 Commit을 클릭한다
						하단에 텍스트상자에 메모할 내용을 적고 commit을 누른다(버전 하나를 만드는 행위) -> 버전생성완료

8. 프로젝트에서 그 파일을 수정했을때 소스트리를 확인해보면 등록한파일에 대한 아이콘이 노란색으로 바뀌어져있다(파일이 수정되었다는것을 의미함)		
	수정한 상태를 다시 커밋하면 버전이 새로 만들어진다. 	
	
	
9. 이미 커밋한 버전 삭제 : 
	1.Reset : 원하는 이전 커밋의 Head로 완전 되돌리는 기능 / 선택한 버전의 상태로 돌아오는것(버전을 지운다)
	버전에서 우클릭 - Reset Current branch to this commit 클릭

 	Hard : 삭제한 버전위로 전부삭제 (우클릭한 파일은 삭제안됨)				  Head를 선택된 커밋위치로 옮기고, 파일도 해당 커밋된 파일 내용으로 롤백
	Mixed : 선택한 버전위로는 사라짐. 현재 파일상태는 커밋되지않은상태로 유지됨.  Head를 선택된 커밋위치로 옮기되, 파일은 최근 변경된 내용 그대로 가져감
	Soft : 모든 로컬 변경사항을 유지

	2.Reverse(Revert) : 바로 이전커밋의 내용을 되돌린다.(되돌리는 커밋을 함께 날려서 파일내용을 롤백) / 선택한 버전을 취소해서 그 이전상태로 돌리는것(버전을 유지하면서 되돌린버전으로 커밋을 유지한다)
	<주의점>
	revert하려는 커밋위치 이후의 커밋이 있으면 안된다.
	여러개의 커밋 이전의 커밋에 revert하려면 맨위 커밋부터 순차적으로 내려와야한다. (revert : 해당 커밋 내용만 롤백한다.)

10. Branch : 작업을 분기해서 할수있는것. (예를 들어, 기존에하고있던 작업에 실험적인 작업을 해야하는경우가 생긴다면 프로젝트를 둘로 나누어서 작업하는게 좋다)
방법은 여러가지가 있다
1. 기존처럼 소스트리로 커밋하고, 나중에 필요없어질때 잘라내는작업하기 (상당히 복잡함)
2. 프로젝트 폴더를 복사해서 작업하기(문제점 : 실험적인작업이 성공했을때, 이걸 원본에 갖다붙이는 작업이 힘들어짐)
3. Branch 사용하기 : 프로젝트폴더를 복사해서 각각의 폴더에서 작업하는것과 같은효과를 내면서, 실험적인 작업이끝났을때 그 내용을 오리지널로 자동으로 병합해주는 기능을 가지고있다


11. Branch 사용법
1. 상단에 Branch를 누른다 - 이름을 입력하고 create를 누른다 - 우측에 Bracches항목에 내가 추가한 브랜치가 보인다(그래프를 보면 내가 선택한곳에서 분기가 나누어짐을 확인할수있다)
2. 병합하기 (merge) : 실험을 마스터로 병합한다고하면, 받는쪽이 선택되어있어야한다(브랜치를 마스터로 선택) - 실험우클릭 - Merge 실험 into current branch클릭
3. 병합시 충돌이 났을경우 해결방법 : 
	충돌로 생긴 주석들 지우고 소스트리로 돌아가서 Unstaged files에 있는 파일 우클릭 
	- Resolve Confilcts - Mark Resolved  == git에게 충돌을 해결했다라는것을 알려준다
	
	(Resolve Using 'Mine' : 병합할때 자신의 브랜치에있었던 내용을 채택한다.)
	(Resolve Using 'Theirs' : 병합할때 자신외의 다른 브랜치에있었던 내용을 채택한다.)
	
	
4. 충돌을 최소화할수있는 방법은 ? 
	: 마스터의 내용을 실험내용에 병합시킨다.(실험은 어짜피 메인이 아니므로..) 그렇게 하다가 실험내용을 최종적으로 채택하게 되었다면
	메인에 실험내용을 병합시키는것으로 마무리할수있다. (한마디로 실험 브랜치에 실험+마스터의 내용을 백업시킨다. 라고 생각해보면 좋을듯)
	
-------------------------------------------------------------------------------------------------
